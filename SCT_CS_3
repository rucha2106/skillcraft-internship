import re

def check_password_strength(password):
    # Define strength score and criteria
    score = 0
    criteria = {
        'length': len(password) >= 8,
        'uppercase': bool(re.search(r'[A-Z]', password)),
        'lowercase': bool(re.search(r'[a-z]', password)),
        'digit': bool(re.search(r'[0-9]', password)),
        'special': bool(re.search(r'[!@#$%^&*(),.?":{}|<>_\-+=]', password))
    }

    # Count how many criteria are met
    score = sum(criteria.values())

    # Determine strength level
    if score == 5:
        strength = 'Very Strong 💪'
    elif score == 4:
        strength = 'Strong ✅'
    elif score == 3:
        strength = 'Moderate ⚠️'
    elif score == 2:
        strength = 'Weak ❌'
    else:
        strength = 'Very Weak 🚫'

    # Print results
    print("\nPassword Strength Report:")
    print("-" * 30)
    for key, met in criteria.items():
        print(f"{key.capitalize():<12}: {'✔️' if met else '❌'}")
    print("-" * 30)
    print(f"Overall Strength: {strength}\n")

def main():
    print("=== Password Strength Checker ===")
    password = input("Enter a password to evaluate: ")
    check_password_strength(password)

if __name__ == "__main__":
    main()
